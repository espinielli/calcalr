[{"path":"https://espinielli.github.io/calcalr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 calcalr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://espinielli.github.io/calcalr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Enrico Spinielli. Author, maintainer.","code":""},{"path":"https://espinielli.github.io/calcalr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Spinielli E (2023). calcalr: Calendars World. https://espinielli.github.io/calcalr/, https://github.com/espinielli/calcalr.","code":"@Manual{,   title = {calcalr: Calendars of the World},   author = {Enrico Spinielli},   year = {2023},   note = {https://espinielli.github.io/calcalr/, https://github.com/espinielli/calcalr}, }"},{"path":"https://espinielli.github.io/calcalr/index.html","id":"calcalr","dir":"","previous_headings":"","what":"Calendars of the World","title":"Calendars of the World","text":"WORK PROGRESS calcalr package implements algorithms book E. M. Reingold, N. Dershowitz “Calendrical Calculations - Ultimate Edition”, Cambridge University Press, April 2018","code":""},{"path":"https://espinielli.github.io/calcalr/index.html","id":"concepts","dir":"","previous_headings":"","what":"Concepts","title":"Calendars of the World","text":"easiest way reckon time simply count days. Reingold Dershowitz chosen midnight onset Monday, January 1, 1 (Gregorian) fixed date 1, abbreviate R.D.1 1. R.D. fractional part giving time day called “moment”. noon day specified  + 0.5. calendars provide conversion functions /R.D. making possible convert one calendar one.","code":""},{"path":"https://espinielli.github.io/calcalr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Calendars of the World","text":"can install development version calcalr GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"espinielli/calcalr\")"},{"path":"https://espinielli.github.io/calcalr/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Calendars of the World","text":"basic example shows solve common problem:","code":"# library(calcalr) ## basic example code"},{"path":"https://espinielli.github.io/calcalr/reference/amod.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjusted remainder function — amod","title":"Adjusted remainder function — amod","text":"Return % b b instead 0.","code":""},{"path":"https://espinielli.github.io/calcalr/reference/amod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjusted remainder function — amod","text":"","code":"amod(x, y)"},{"path":"https://espinielli.github.io/calcalr/reference/amod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjusted remainder function — amod","text":"x integer y integer","code":""},{"path":"https://espinielli.github.io/calcalr/reference/amod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjusted remainder function — amod","text":"integer","code":""},{"path":"https://espinielli.github.io/calcalr/reference/amod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjusted remainder function — amod","text":"","code":"if (FALSE) { amod(8, 4) }"},{"path":"https://espinielli.github.io/calcalr/reference/day_of_week_from_fixed.html","id":null,"dir":"Reference","previous_headings":"","what":"Return day of the week from a fixed date — day_of_week_from_fixed","title":"Return day of the week from a fixed date — day_of_week_from_fixed","text":"Return day week fixed date","code":""},{"path":"https://espinielli.github.io/calcalr/reference/day_of_week_from_fixed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return day of the week from a fixed date — day_of_week_from_fixed","text":"","code":"day_of_week_from_fixed(date)"},{"path":"https://espinielli.github.io/calcalr/reference/day_of_week_from_fixed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return day of the week from a fixed date — day_of_week_from_fixed","text":"date fixed date, .e. number (eventually partial) days since epoch","code":""},{"path":"https://espinielli.github.io/calcalr/reference/day_of_week_from_fixed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return day of the week from a fixed date — day_of_week_from_fixed","text":"integer indicating day week","code":""},{"path":"https://espinielli.github.io/calcalr/reference/day_of_week_from_fixed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return day of the week from a fixed date — day_of_week_from_fixed","text":"","code":"if (FALSE) { day_of_week_from_fixed(253427) }"},{"path":"https://espinielli.github.io/calcalr/reference/epoch.html","id":null,"dir":"Reference","previous_headings":"","what":"Epoch definition. — epoch","title":"Epoch definition. — epoch","text":"Rata Die, R.D., 0 (reference .)","code":""},{"path":"https://espinielli.github.io/calcalr/reference/epoch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Epoch definition. — epoch","text":"","code":"epoch()"},{"path":"https://espinielli.github.io/calcalr/reference/epoch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Epoch definition. — epoch","text":"number indicating start calendar","code":""},{"path":"https://espinielli.github.io/calcalr/reference/epoch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Epoch definition. — epoch","text":"","code":"if (FALSE) { epoch() }"},{"path":"https://espinielli.github.io/calcalr/reference/fixed_from_moment.html","id":null,"dir":"Reference","previous_headings":"","what":"Return fixed date from moment — fixed_from_moment","title":"Return fixed date from moment — fixed_from_moment","text":"Return fixed date moment","code":""},{"path":"https://espinielli.github.io/calcalr/reference/fixed_from_moment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return fixed date from moment — fixed_from_moment","text":"","code":"fixed_from_moment(tee)"},{"path":"https://espinielli.github.io/calcalr/reference/fixed_from_moment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return fixed date from moment — fixed_from_moment","text":"tee moment time","code":""},{"path":"https://espinielli.github.io/calcalr/reference/fixed_from_moment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return fixed date from moment — fixed_from_moment","text":"Rata Die","code":""},{"path":"https://espinielli.github.io/calcalr/reference/fixed_from_moment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return fixed date from moment — fixed_from_moment","text":"","code":"if (FALSE) { fixed_from_moment(2.65) }"},{"path":"https://espinielli.github.io/calcalr/reference/kday_after.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the fixed date of the k-day after fixed date — kday_after","title":"Return the fixed date of the k-day after fixed date — kday_after","text":"Return fixed date k-day fixed date","code":""},{"path":"https://espinielli.github.io/calcalr/reference/kday_after.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the fixed date of the k-day after fixed date — kday_after","text":"","code":"kday_after(k, date)"},{"path":"https://espinielli.github.io/calcalr/reference/kday_after.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the fixed date of the k-day after fixed date — kday_after","text":"k weekday; k=0 means Sunday, k=1 means Monday, . date fixed date, .e. number (eventually partial) days since epoch","code":""},{"path":"https://espinielli.github.io/calcalr/reference/kday_after.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the fixed date of the k-day after fixed date — kday_after","text":"fixed day number","code":""},{"path":[]},{"path":"https://espinielli.github.io/calcalr/reference/kday_after.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the fixed date of the k-day after fixed date — kday_after","text":"","code":"if (FALSE) { kday_after(1, -61387) }"},{"path":"https://espinielli.github.io/calcalr/reference/kday_before.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the fixed date of the k-day before fixed date — kday_before","title":"Return the fixed date of the k-day before fixed date — kday_before","text":"Return fixed date k-day fixed date","code":""},{"path":"https://espinielli.github.io/calcalr/reference/kday_before.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the fixed date of the k-day before fixed date — kday_before","text":"","code":"kday_before(k, date)"},{"path":"https://espinielli.github.io/calcalr/reference/kday_before.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the fixed date of the k-day before fixed date — kday_before","text":"k weekday; k=0 means Sunday, k=1 means Monday, . date fixed date, .e. number (eventually partial) days since epoch","code":""},{"path":"https://espinielli.github.io/calcalr/reference/kday_before.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the fixed date of the k-day before fixed date — kday_before","text":"fixed day number","code":""},{"path":[]},{"path":"https://espinielli.github.io/calcalr/reference/kday_before.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the fixed date of the k-day before fixed date — kday_before","text":"","code":"if (FALSE) { kday_before(1, -61387) }"},{"path":"https://espinielli.github.io/calcalr/reference/kday_nearest.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the fixed date of the k-day nearest fixed date 'date' — kday_nearest","title":"Return the fixed date of the k-day nearest fixed date 'date' — kday_nearest","text":"Return fixed date k-day nearest fixed date 'date'","code":""},{"path":"https://espinielli.github.io/calcalr/reference/kday_nearest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the fixed date of the k-day nearest fixed date 'date' — kday_nearest","text":"","code":"kday_nearest(k, date)"},{"path":"https://espinielli.github.io/calcalr/reference/kday_nearest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the fixed date of the k-day nearest fixed date 'date' — kday_nearest","text":"k weekday; k=0 means Sunday, k=1 means Monday, . date fixed date, .e. number (eventually partial) days since epoch","code":""},{"path":"https://espinielli.github.io/calcalr/reference/kday_nearest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the fixed date of the k-day nearest fixed date 'date' — kday_nearest","text":"fixed day number","code":""},{"path":[]},{"path":"https://espinielli.github.io/calcalr/reference/kday_nearest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the fixed date of the k-day nearest fixed date 'date' — kday_nearest","text":"","code":"if (FALSE) { kday_nearest(1, -61387) }"},{"path":"https://espinielli.github.io/calcalr/reference/kday_on_or_before.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the fixed date of the k-day on or before fixed date 'date'. — kday_on_or_before","title":"Return the fixed date of the k-day on or before fixed date 'date'. — kday_on_or_before","text":"Return fixed date k-day fixed date 'date'.","code":""},{"path":"https://espinielli.github.io/calcalr/reference/kday_on_or_before.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the fixed date of the k-day on or before fixed date 'date'. — kday_on_or_before","text":"","code":"kday_on_or_before(k, date)"},{"path":"https://espinielli.github.io/calcalr/reference/kday_on_or_before.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the fixed date of the k-day on or before fixed date 'date'. — kday_on_or_before","text":"k weekday; k=0 means Sunday, k=1 means Monday, . date fixed date, .e. number (eventually partial) days since epoch","code":""},{"path":"https://espinielli.github.io/calcalr/reference/kday_on_or_before.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the fixed date of the k-day on or before fixed date 'date'. — kday_on_or_before","text":"fixed day number","code":""},{"path":[]},{"path":"https://espinielli.github.io/calcalr/reference/kday_on_or_before.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the fixed date of the k-day on or before fixed date 'date'. — kday_on_or_before","text":"","code":"if (FALSE) { kday_on_or_before(1, -61387) }"},{"path":"https://espinielli.github.io/calcalr/reference/mod3.html","id":null,"dir":"Reference","previous_headings":"","what":"Interval modulus — mod3","title":"Interval modulus — mod3","text":"extension standard modulus takes interval modulus, rather divisor. shifts real-valued x half-open real interval [..b)  adding multiple length  b - .","code":""},{"path":"https://espinielli.github.io/calcalr/reference/mod3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interval modulus — mod3","text":"","code":"mod3(x, a, b)"},{"path":"https://espinielli.github.io/calcalr/reference/mod3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interval modulus — mod3","text":"x real value lower end interval b upper end interval","code":""},{"path":"https://espinielli.github.io/calcalr/reference/mod3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interval modulus — mod3","text":"integer","code":""},{"path":"https://espinielli.github.io/calcalr/reference/mod3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interval modulus — mod3","text":"","code":"if (FALSE) { mod3(123, 7, 11) }"},{"path":"https://espinielli.github.io/calcalr/reference/rd.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the rata diem (number of days since epoch) of a moment in time — rd","title":"Return the rata diem (number of days since epoch) of a moment in time — rd","text":"Return rata diem (number days since epoch) moment time","code":""},{"path":"https://espinielli.github.io/calcalr/reference/rd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the rata diem (number of days since epoch) of a moment in time — rd","text":"","code":"rd(tee)"},{"path":"https://espinielli.github.io/calcalr/reference/rd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the rata diem (number of days since epoch) of a moment in time — rd","text":"tee double indicating moment time","code":""},{"path":"https://espinielli.github.io/calcalr/reference/rd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the rata diem (number of days since epoch) of a moment in time — rd","text":"number (eventually partial) days since epoch","code":""},{"path":"https://espinielli.github.io/calcalr/reference/rd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the rata diem (number of days since epoch) of a moment in time — rd","text":"","code":"if (FALSE) { rd(1234.5) }"},{"path":"https://espinielli.github.io/calcalr/reference/summa.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the sum of f(i) from i=k, k+1, ... till p(i) holds true or 0 — summa","title":"Return the sum of f(i) from i=k, k+1, ... till p(i) holds true or 0 — summa","text":"tail recursive implementation.","code":""},{"path":"https://espinielli.github.io/calcalr/reference/summa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the sum of f(i) from i=k, k+1, ... till p(i) holds true or 0 — summa","text":"","code":"summa(f, k, p)"},{"path":"https://espinielli.github.io/calcalr/reference/summa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the sum of f(i) from i=k, k+1, ... till p(i) holds true or 0 — summa","text":"f function (named, anonymous formula). k integer index. p function (named, anonymous formula).","code":""},{"path":"https://espinielli.github.io/calcalr/reference/summa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the sum of f(i) from i=k, k+1, ... till p(i) holds true or 0 — summa","text":"number","code":""},{"path":"https://espinielli.github.io/calcalr/reference/summa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the sum of f(i) from i=k, k+1, ... till p(i) holds true or 0 — summa","text":"","code":"if (FALSE) { # sum of squares integers less than or equal to 4 summa(\\(x) x**2, 1, \\(i) i<=4) }"},{"path":"https://espinielli.github.io/calcalr/reference/time_from_moment.html","id":null,"dir":"Reference","previous_headings":"","what":"Return time from moment 'tee' — time_from_moment","title":"Return time from moment 'tee' — time_from_moment","text":"Return time moment 'tee'","code":""},{"path":"https://espinielli.github.io/calcalr/reference/time_from_moment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return time from moment 'tee' — time_from_moment","text":"","code":"time_from_moment(tee)"},{"path":"https://espinielli.github.io/calcalr/reference/time_from_moment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return time from moment 'tee' — time_from_moment","text":"tee moment time","code":""},{"path":"https://espinielli.github.io/calcalr/reference/time_from_moment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return time from moment 'tee' — time_from_moment","text":"factional part day","code":""},{"path":"https://espinielli.github.io/calcalr/reference/time_from_moment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return time from moment 'tee' — time_from_moment","text":"","code":"if (FALSE) { time_from_moment(2.65) }"}]
